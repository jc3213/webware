name: Build qaac portable and singleton

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    defaults:
      run:
        shell: bash

    steps:
    - name: Install tools
      run: choco install -y 7zip

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 18

    - name: Install generate-evb
      run: npm install generate-evb

    - name: Get latest Enigma Virtual Box release
      run: |
        curl -s https://api.github.com/repos/dirkarnez/enigma-virtual-box-portable/releases/latest \
        | grep "browser_download_url" \
        | grep "enigma-virtual-box-portable-v.*\.zip" \
        | cut -d '"' -f 4 \
        | xargs curl -L -o enigmavb.zip

    - name: Extract Enigma Virtual Box
      run: 7z x enigmavb.zip -oenigmavb

    - name: Download latest qaac release
      run: |
        QAAC_URL=$(curl -s https://api.github.com/repos/nu774/qaac/releases/latest \
          | grep "browser_download_url" \
          | grep "qaac_.*\.zip" \
          | cut -d '"' -f 4)
        QAAC_VERSION=$(basename "$QAAC_URL" | sed 's/qaac_\(.*\)\.zip/\1/')
        echo "QAAC_VERSION=$QAAC_VERSION" >> $GITHUB_ENV
        curl -L -o qaac.zip "$QAAC_URL"

    - name: Extract qaac and prepare folders
      run: |
        7z x qaac.zip
        mkdir -p win32 win64
        cp qaac_*/x86/* win32/
        cp qaac_*/x64/* win64/

    - name: Download iTunes installers
      run: |
        curl -L -o iTunes32.exe "https://www.apple.com/itunes/download/win32"
        curl -L -o iTunes64.exe "https://www.apple.com/itunes/download/win64"

    - name: Extract iTunes MSI files
      run: |
        mkdir -p itunes32_exe itunes64_exe
        7z x iTunes32.exe -oitunes32_exe
        7z x iTunes64.exe -oitunes64_exe

    - name: Extract DLLs from MSI using cmd
      shell: cmd
      run: |
        mkdir itunes32_dll
        mkdir itunes64_dll

        for /f %%i in ('dir /b /s itunes32_exe\iTunes*.msi') do set MSI32=%%i
        for /f %%i in ('dir /b /s itunes64_exe\iTunes*.msi') do set MSI64=%%i

        msiexec /a "%MSI32%" /qn TARGETDIR="%CD%\itunes32_dll"
        msiexec /a "%MSI64%" /qn TARGETDIR="%CD%\itunes64_dll"

    - name: Copy DLLs to win32 and win64
      run: |
        DLLS=("ASL.dll" "CoreAudioToolbox.dll" "CoreFoundation.dll" "libdispatch.dll" "libicuin.dll" "libicuuc.dll" "objc.dll")
        for dll in "${DLLS[@]}"; do
          find itunes32_dll -iname "$dll" -exec cp {} win32/ \;
          find itunes64_dll -iname "$dll" -exec cp {} win64/ \;
        done

        find itunes32_dll -iname "icudt*.dll" -exec cp {} win32/ \;
        find itunes64_dll -iname "icudt*.dll" -exec cp {} win64/ \;

    - name: Generate .evb project files
      run: node webware/js/generate-evb.js

    - name: Run Enigma Virtual Box Console
      shell: cmd
      run: |
        enigmavb\EnigmaVBConsole.exe build\qaac-win32-%QAAC_VERSION%.evb
        enigmavb\EnigmaVBConsole.exe build\qaac-win64-%QAAC_VERSION%.evb

    - name: Package zip bundles
      run: |
        7z a -mx=9 qaac-win32-${QAAC_VERSION}.zip ./win32/*
        7z a -mx=9 qaac-win64-${QAAC_VERSION}.zip ./win64/*

    - name: Upload win32 zip
      uses: actions/upload-artifact@v4
      with:
        name: qaac-win32-${{ env.QAAC_VERSION }}
        path: qaac-win32-${{ env.QAAC_VERSION }}.zip

    - name: Upload win64 zip
      uses: actions/upload-artifact@v4
      with:
        name: qaac-win64-${{ env.QAAC_VERSION }}
        path: qaac-win64-${{ env.QAAC_VERSION }}.zip

    - name: Upload singleton win32 EXE
      uses: actions/upload-artifact@v4
      with:
        name: qaac-singleton-win32-${{ env.QAAC_VERSION }}
        path: qaac-singleton-win32-${{ env.QAAC_VERSION }}.exe

    - name: Upload singleton win64 EXE
      uses: actions/upload-artifact@v4
      with:
        name: qaac-singleton-win64-${{ env.QAAC_VERSION }}
        path: qaac-singleton-win64-${{ env.QAAC_VERSION }}.exe
